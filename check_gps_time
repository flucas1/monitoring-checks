#!/usr/bin/env python3
#-------------------------------------------------------------------------------

import argparse
import gps
import time
import os
import sys

#-------------------------------------------------------------------------------

_candebug = False
def candebug():
    global _candebug
    return _candebug
def setcandebug(value):
    global _candebug
    _candebug = value

def infomsg(msg):
    if candebug() == True:
        print(msg, flush=True)

def exitnagios(status,message):
    if status=="OK":
        exitcode = 0
    elif status=="WARNING":
        exitcode = 1
    elif status=="CRITICAL":
        exitcode = 2
    elif status=="UNKNOWN":
        exitcode = 3
    else:
        exitcode = 4
    print(status+": "+message, flush=True)
    exit(exitcode)

#-------------------------------------------------------------------------------

#collect arguments
def parse_args(forcedargs=None):
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--timeout",                                 dest="timeout",          default="90:CRITICAL",                        help="timeout value:STATUS")
    parser.add_argument("-Â®", "--debug",             action="store_true",  dest="debug",            default=False,                                help="be more verbose")
    args = parser.parse_args(forcedargs)

    return args

def dogpstimecheck(timeoutvalue,timeoutstatus):
    gpsd = gps.gps(mode=gps.watch_options.WATCH_ENABLE|gps.watch_options.WATCH_NEWSTYLE)

    timeout = False
    gps_time = None
    try:
        start = time.time()
        while True:
            if gpsd.waiting():
                if gpsd.read() == 0:
                    report = gpsd.data
                    infomsg(report)
                    if report['class'] == 'TPV':
                         test_time = report.get('time','')
                         if (test_time != ''):
                             gps_time = test_time
                             break
            if time.time() > start + timeoutvalue:
                timeout = True
                break
            else:
                time.sleep(1)
    except Exception as e:
        exitnagios("UNKNOWN","internal error - "+str(e))
    finally:
        if timeout:
            exitnagios(timeoutstatus,"GPS time not received")
        elif (gps_time==None):
            exitnagios("WARNING","GPS data cannot be parsed: "+str(gps_time))
        else:
            exitnagios("OK","GPS time is: "+str(gps_time))

def main(forcedargs=None):
    args = parse_args(forcedargs)

    setcandebug(args.debug)

    parts = args.timeout.split(":")
    timeoutvalue = int(parts[0])
    if len(parts)>1:
        timeoutstatus = parts[1]
    else:
        timeoutstatus = "CRITICAL"
    if timeoutstatus in ["OK", "WARNING", "CRITICAL", "UNKNOWN"]:
        dogpstimecheck(timeoutvalue,timeoutstatus)
    else:
        exitnagios("CRITICAL","timeout status is not valid")

#-------------------------------------------------------------------------------

if __name__ == "__main__":
    main()

#-------------------------------------------------------------------------------
