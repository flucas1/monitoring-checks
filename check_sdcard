#!/usr/bin/env python3
#-------------------------------------------------------------------------------

import argparse
import sys
import os
import subprocess
import platform

#-------------------------------------------------------------------------------

_candebug = False
def candebug():
    global _candebug
    return _candebug
def setcandebug(value):
    global _candebug
    _candebug = value

def infomsg(msg):
    if candebug() == True:
        print(msg, flush=True)

def exitnagios(status,message):
    if status=="OK":
        exitcode = 0
    elif status=="WARNING":
        exitcode = 1
    elif status=="CRITICAL":
        exitcode = 2
    elif status=="UNKNOWN":
        exitcode = 3
    else:
        exitcode = 4
    print(status+": "+message, flush=True)
    sys.exit(exitcode)

#-------------------------------------------------------------------------------

def doospfroutescall(device):
    cmdline = ["/usr/bin/mmc","extcsd","read",device]
    completedproc = subprocess.run(cmdline,capture_output=True)
    output = completedproc.stdout.decode("utf-8").strip()
    errors = completedproc.stderr.decode("utf-8").strip()
    exitcode = completedproc.returncode

    if exitcode == 0:
        exitnagios("OK","no issues detected with the sdcard")
    else:
        exitnagios("CRITICAL","there are issues with the sdcard")

#-------------------------------------------------------------------------------

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--device",                                  dest="device",           default="",                             help="block device to check")
    parser.add_argument("-Â®", "--debug",             action="store_true",  dest="debug",            default=False,                          help="be more verbose")
    args = parser.parse_args()
    
    setcandebug(args.debug)
    
    if args.device == "":
        exitnagios("CRITICAL","no device specified")
    
    doospfroutescall(args.device)

if __name__ == '__main__':
    main()

#-------------------------------------------------------------------------------
